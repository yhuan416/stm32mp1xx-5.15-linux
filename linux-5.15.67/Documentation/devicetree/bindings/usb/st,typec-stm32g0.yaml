# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
%YAML 1.2
---
$id: "http://devicetree.org/schemas/usb/st,typec-stm32g0.yaml#"
$schema: "http://devicetree.org/meta-schemas/core.yaml#"

title: STMicroelectronics STM32G0 Type-C controller bindings

description: |
  The STM32G0 MCU can be programmed to control Type-C connector(s) through I2C
  typically using the UCSI protocol over I2C, with a dedicated alert
  (interrupt) pin.

maintainers:
  - Fabrice Gasnier <fabrice.gasnier@foss.st.com>

properties:
  compatible:
    const: st,stm32g0-typec

  reg:
    maxItems: 1

  interrupts:
    maxItems: 1

  connector:
    type: object
    allOf:
      - $ref: ../connector/usb-connector.yaml#

  firmware-name:
    description: |
      Should contain the name of the default firmware image
      file located on the firmware search path

  wakeup-source: true
  power-domains: true

required:
  - compatible
  - reg
  - interrupts

additionalProperties: false

examples:
  - |
    #include <dt-bindings/interrupt-controller/irq.h>
    i2c5 {
      #address-cells = <1>;
      #size-cells = <0>;

      stm32g0@53 {
        compatible = "st,stm32g0-typec";
        reg = <0x53>;
        /* Alert pin on GPIO PE12 */
        interrupts = <12 IRQ_TYPE_EDGE_FALLING>;
        interrupt-parent = <&gpioe>;

        /* Example with one type-C connector */
        connector {
          compatible = "usb-c-connector";
          label = "USB-C";

          port {
            con_usb_c_ep: endpoint {
              remote-endpoint = <&usbotg_hs_ep>;
            };
          };
        };
      };
    };

    usbotg_hs {
      usb-role-switch;
      port {
        usbotg_hs_ep: endpoint {
          remote-endpoint = <&con_usb_c_ep>;
        };
      };
    };
...
